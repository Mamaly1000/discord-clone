// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Profile{
  id String @id @map("_id") @default(uuid())
  userId String @unique
  name String
  imageUrl String 
  email String 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  servers Server[]
  members Member[]
  channels Channel[]
}

model Server{
  id String @id @map("_id") @default(uuid())
  name String 
  imageUrl String
  inviteCode String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  profileId String 
  profile Profile @relation(fields: [profileId],references: [id],onDelete:Cascade)

  members Member[]
  channels Channel[]

  @@index([profileId])
}

enum MemberRole{
  ADMIN
  MODERATOR
  GUEST
}

model Member{
  id String @id @default(uuid()) @map("_id")
  role MemberRole @default(GUEST)

  profileId String
  prfile Profile @relation(fields: [profileId],references: [id],onDelete:Cascade)

  serverId String
  server Server @relation(fields: [serverId],references: [id],onDelete:Cascade)

  @@index([profileId,serverId])
} 

enum ChannelType{
  TEXT
  AUDIO
  VIDEO
}

model Channel{
  id String @id @default(uuid()) @map("_id")
  name String
  type ChannelType @default(TEXT)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  profileId String
  profile Profile @relation(fields: [profileId],references: [id],onDelete:Cascade)

  serverId String
  server Server @relation(fields: [serverId],references: [id],onDelete:Cascade)

  @@index([profileId,serverId])
}